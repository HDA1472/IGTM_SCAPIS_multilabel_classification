---
title: "differential_expression"
format: html
editor: source
---

```{r setup, message = FALSE, warning = FALSE, results = 'hide'}
library(HDAnalyzeR)
library(tidyverse)
library(tidyheatmaps)
library(forcats)
library(patchwork)
library(fmsb)
library(corrplot)
library(igraph)
library(ggraph)
```

# Import data & metadata

```{r, message = FALSE, results = 'hide'}
data_scapis <- hd_import_data("data/processed_data/scapis_preprocessed.csv")
data_igt <- hd_import_data("data/processed_data/igt_preprocessed.csv")
metadata_scapis <- hd_import_data("data/processed_data/metadata_scapis.csv")
metadata_igt <- hd_import_data("data/processed_data/metadata_igt.csv")
metadata <- hd_import_data("data/processed_data/metadata_preprocessed.csv")

obj_scapis <- hd_initialize(data_scapis, metadata_scapis, is_wide = TRUE)
obj_igt <- hd_initialize(data_igt, metadata_igt, is_wide = TRUE)
```

# Differential Expression - limma

```{r}
disease_vec <- c("Obesity", "T2D", "MS", "MASLD", "Carotid_plaque", "CAC")
```

"IGT" = "#836879", "Sleep_apnea" = "#A6CEE3" 

```{r}
disease_palette <- c("Obesity" = "#E7662B",
                     "T2D" = "#321433",
                     "MS" = "#08585A", 
                     "MASLD" = "#FFD321", 
                     "Carotid_plaque" = "#E8A29A", 
                     "CAC" = "#9E0142")
```

```{r}
metadata_cols <- c("Sex", "Age", "Smoke_status", "MAP_Mean", "HbA1c", "Chol", "LDL", "HDL", "TG", "ALT", "GGT", "Urate", "Crea", "eGFR", "CRP", "Hb", "WBC", "PLT")
```

## IGT

```{r}
res_igt <- lapply(disease_vec, function(disease) {
  print(paste(disease, "Case:"))
  
  if (disease %in% c("Obesity")) {
    correct <- c("Age", "Sex")
  } else {
    correct <- c("Age", "Sex", "BMI")
  }
  de_res <- hd_de_limma(obj_igt, variable = disease, case = disease, correct = correct) |> 
    hd_plot_volcano()
  
  de_res[["de_res"]] <- de_res$de_res |> select(-all_of(disease))
  
  return(de_res)
})

names(res_igt) <- disease_vec
```

```{r}
de_all_igt <- lapply(disease_vec, function(disease) {
    de_res <- res_igt[[disease]]$de_res |> mutate(Disease = disease)
  })
de_all_igt <- bind_rows(de_all_igt)
```

```{r}
volcanos_all_igt <- lapply(disease_vec, function(disease) {
    de_res <- res_igt[[disease]]$volcano_plot
  })

names(volcanos_all_igt) <- disease_vec
```

## SCAPIS

```{r}
res_scapis <- lapply(disease_vec, function(disease) {
  print(paste(disease, "Case:"))
  
  if (disease %in% c("Obesity")) {
    correct <- c("Age", "Sex")
  } else {
    correct <- c("Age", "Sex", "BMI")
  }
  de_res <- hd_de_limma(obj_scapis, variable = disease, case = disease, correct = correct) |> 
    hd_plot_volcano()
  
  de_res[["de_res"]] <- de_res$de_res |> select(-all_of(disease))
  
  return(de_res)
})

names(res_scapis) <- disease_vec
```

```{r}
de_all_scapis <- lapply(disease_vec, function(disease) {
    de_res <- res_scapis[[disease]]$de_res |> mutate(Disease = disease)
  })
de_all_scapis <- bind_rows(de_all_scapis)
```

```{r}
volcanos_all_scapis <- lapply(disease_vec, function(disease) {
    de_res <- res_scapis[[disease]]$volcano_plot
  })

names(volcanos_all_scapis) <- disease_vec
```

# Analysis of DE results

## Summary DE results

```{r}
barplot_data <- de_all_igt |>
  bind_rows() |>
  mutate(sig = case_when(
    adj.P.Val > 0.05 ~ "not significant",
    logFC > 0 & adj.P.Val < 0.05 ~ "significant up",
    logFC < 0 & adj.P.Val < 0.05 ~ "significant down"
  )) |>
  mutate(sig = factor(sig, levels = c("not significant", "significant down", "significant up"))) |>
  group_by(Disease, sig) |>
  summarise(Count = n()) |>
  ungroup()

de_prot_n <- barplot_data |>
  filter(sig == "significant up" | sig == "significant down") |>
  group_by(Disease) |>
  summarize(sum = sum(Count)) |>
  ungroup() |> 
  select(Disease, sum) |> 
  unique() |> 
  bind_rows(data.frame(Disease = "Sleep_apnea", sum = 0))

barplot_data |>
  left_join(de_prot_n, by = "Disease") |>
  ggplot(aes(x = Count, y = reorder(Disease, sum), fill = sig)) +
  geom_bar(stat = "identity", position = "stack") +
  labs(x = "Number of proteins", y = "", fill = "Significance") +
  theme_hd(angled = T) +
  theme(legend.position = "top",
        legend.title = element_text(face = "bold")) +
  scale_fill_hd("diff_exp") +
  scale_x_continuous(limits=c(0, 1500), breaks=c(0, 1500))
    
```

## Top proteins boxplots

```{r}
disease_palette_boxplot <- c("Obesity" = "#E7662B",
                             "T2D" = "#321433",
                             "MS" = "#08585A", 
                             "MASLD" = "#FFD321", 
                             "Carotid_plaque" = "#E8A29A", 
                             "CAC" = "#9E0142",
                             "Other Disease" = "grey70",
                             "Healthy" = "grey90")

top_proteins <- de_all_igt |> 
  filter(adj.P.Val < 0.05) |> 
  group_by(Disease) |>
  arrange(Disease, desc(logFC)) |>
  slice_head(n = 3) |> 
  ungroup() |> 
  rename(Protein = Feature)

top_proteins_vec <- top_proteins |> 
  pull(Protein)

plot_data <- data_igt |> 
  left_join(metadata_igt |> select(DAid, all_of(disease_vec)), by = "DAid") |>
  select(DAid, all_of(disease_vec), all_of(top_proteins_vec)) |> 
  mutate(across(all_of(c("Obesity", "MS", "MASLD", "CAC", "Carotid_plaque", "T2D")), ~ ifelse(. == "0", 0, 1))) |>
  pivot_longer(cols = -c(DAid, disease_vec), names_to = "Protein", values_to = "Value") |> 
  left_join(top_proteins |> select(Protein, Disease) |> unique(), 
            by = "Protein", 
            relationship = "many-to-many") |> 
  mutate(Disease_Value = case_when(
    Disease == "Obesity" ~ Obesity,
    Disease == "CAC" ~ CAC,
    Disease == "T2D" ~ T2D,
    Disease == "MS" ~ MS,
    Disease == "MASLD" ~ MASLD,
    Disease == "Carotid_plaque" ~ Carotid_plaque,
    TRUE ~ NA_real_
  )) |> 
  mutate(Any_disease = Obesity + CAC + T2D + MS + MASLD + Carotid_plaque) |> 
  mutate(Disease_Value = case_when(
    Disease_Value == 1 ~ Disease,
    Any_disease == 0 ~ "Healthy",
    Disease_Value == 0 ~ "Other Disease",
    TRUE ~ "Control"  # Default case for NA values
  )) |> 
  mutate(Disease_protein = paste(Disease, Protein, sep = "_"))

plot_data |> 
  ggplot(aes(x = factor(Disease_Value, 
                        levels = c("Healthy", 
                                   "Other Disease", 
                                   unique(Disease[!is.na(Disease_Value)]))), 
             y = Value, 
             fill = Disease_Value)) +
  geom_boxplot(position = position_dodge(0.8), outlier.size = 1.5) +
  scale_fill_manual(values = disease_palette_boxplot) +
  facet_wrap(~Disease_protein, scales = "free", nrow = 3) +
  labs(x = "", y = "") +
  theme_hd() + 
  theme(legend.position = "none",
        axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1))
```

## Protein heatmaps

Top 20 proteins for each disease according to logFC. LogFC > 0.1 and adj.P.val < 0.05.

```{r}
top_proteins <- de_all_igt |> 
  filter(adj.P.Val < 0.05, logFC > 0.1) |> 
  arrange(desc(logFC)) |> 
  group_by(Disease) |>
  top_n(20, logFC) |> 
  ungroup() |> 
  pull(Feature)

de_all_igt |>
  filter(Feature %in% top_proteins) |>
  filter(adj.P.Val < 0.05, logFC > 0.1) |> 
  select(Disease, Feature, logFC) |> 
  rename(Protein = Feature) |> 
  pivot_wider(names_from = Disease, values_from = logFC) |>
  mutate(across(everything(), ~ replace_na(., 0))) |> 
  pivot_longer(cols = -Protein, names_to = "Disease", values_to = "logFC") |> 
  tidyheatmap(
    rows = Protein,
    columns = Disease,
    values = logFC,
    colors = c("white", "red4"),
    cluster_rows = TRUE,
    cluster_cols = TRUE,
    show_colnames = TRUE,
    clustering_method = "ward.D2")
```

Stricter filtering.

```{r}
de_all_igt |> 
  filter(adj.P.Val < 0.05, logFC > 0.5) |> 
  arrange(desc(logFC)) |> 
  select(Disease, Feature, logFC) |> 
  rename(Protein = Feature) |> 
  pivot_wider(names_from = Disease, values_from = logFC) |>
  mutate(across(everything(), ~ replace_na(., 0))) |> 
  pivot_longer(cols = -Protein, names_to = "Disease", values_to = "logFC") |> 
  tidyheatmap(
    rows = Disease,
    columns = Protein,
    values = logFC,
    colors = c("white", "red4"),
    cluster_rows = TRUE,
    cluster_cols = TRUE,
    show_colnames = TRUE,
    clustering_method = "ward.D2")
```

## Annotate proteins with LASSO importance

```{r}
lasso_features <- readRDS("results/models_results/lasso_features_de.RData")
lasso <- readRDS("results/models/lasso_binary_de.RData")
```

Binary annotation of proteins with importance > 30.

```{r}
disease_palette_heatmap <- list(Obesity = c("0" = "white", "Obesity" = "#E7662B"),
                                T2D = c("0" = "white", "T2D" = "#321433"),
                                MS = c("0" = "white", "MS" = "#08585A"), 
                                MASLD = c("0" = "white", "MASLD" = "#FFD321"), 
                                Carotid_plaque = c("0" = "white", "Carotid_plaque" = "#E8A29A"), 
                                CAC = c("0" = "white", "CAC" = "#9E0142"))

binary_disease_cols <- lasso_features |> 
  filter(Scaled_Importance > 0.3) |> 
  select(-Importance, -Sign) |> 
  pivot_wider(names_from = Disease, values_from = Scaled_Importance) |> 
  mutate(across(where(is.numeric), ~ ifelse(is.na(.), 0, 1))) |> 
  rename(Protein = Feature)

top_proteins <- de_all_igt |> 
  filter(adj.P.Val < 0.05, logFC > 0.1) |> 
  arrange(desc(logFC)) |> 
  group_by(Disease) |>
  top_n(20, logFC) |> 
  ungroup() |> 
  pull(Feature)

de_all_igt |>
  filter(Feature %in% top_proteins) |>
  filter(adj.P.Val < 0.05, logFC > 0.1) |> 
  select(Disease, Feature, logFC) |> 
  rename(Protein = Feature) |> 
  pivot_wider(names_from = Disease, values_from = logFC) |>
  mutate(across(everything(), ~ replace_na(., 0))) |> 
  pivot_longer(cols = -Protein, names_to = "Disease", values_to = "logFC") |> 
  left_join(binary_disease_cols, by = "Protein") |> 
  mutate(across(everything(), ~ replace_na(., 0))) |> 
  tidyheatmap(
    rows = Disease,
    columns = Protein,
    values = logFC,
    colors = c("white", "red4"),
    annotation_col = c("Obesity", "T2D", "MS", "MASLD", "Carotid_plaque", "CAC"),
    annotation_colors = disease_palette_heatmap,
    annotation_legend = FALSE,
    cluster_rows = TRUE,
    cluster_cols = TRUE,
    show_colnames = TRUE,
    clustering_method = "ward.D2"
  )
```

Continuous importance annotation. >0 filtering.

Metabolic syndrome is very interesting as the features with more than 50% (except 1) are not differentially expressed. However, MS is predicted with an AUC of 0.86.

```{r}
disease_palette_heatmap <- list(Obesity = c("0" = "white", "1" = "#E7662B"), 
                                T2D = c("0" = "white", "1" = "#321433"),
                                MS = c("0" = "white", "1" = "#08585A"), 
                                MASLD = c("0" = "white", "1" = "#FFD321"), 
                                Carotid_plaque = c("0" = "white", "1" = "#E8A29A"), 
                                CAC = c("0" = "white", "1" = "#9E0142"))

binary_disease_cols <- lasso_features |> 
  filter(Scaled_Importance > 0) |> 
  select(-Importance, -Sign) |> 
  pivot_wider(names_from = Disease, values_from = Scaled_Importance) |> 
  mutate(across(everything(), ~ replace_na(., 0))) |> 
  rename(Protein = Feature)

top_proteins <- de_all_igt |> 
  filter(adj.P.Val < 0.05, logFC > 0.1) |> 
  arrange(desc(logFC)) |> 
  group_by(Disease) |>
  top_n(20, logFC) |> 
  ungroup() |> 
  pull(Feature)

de_all_igt |>
  filter(Feature %in% top_proteins) |>
  filter(adj.P.Val < 0.05, logFC > 0.1) |> 
  select(Disease, Feature, logFC) |> 
  rename(Protein = Feature) |> 
  pivot_wider(names_from = Disease, values_from = logFC) |>
  mutate(across(everything(), ~ replace_na(., 0))) |> 
  pivot_longer(cols = -Protein, names_to = "Disease", values_to = "logFC") |> 
  left_join(binary_disease_cols, by = "Protein") |> 
  mutate(across(everything(), ~ replace_na(., 0))) |> 
  tidyheatmap(
    rows = Disease,
    columns = Protein,
    values = logFC,
    colors = c("white", "red4"),
    annotation_col = c("Obesity", "T2D", "MS", "MASLD", "Carotid_plaque", "CAC"),
    annotation_colors = disease_palette_heatmap,
    cluster_rows = TRUE,
    cluster_cols = TRUE,
    show_colnames = TRUE,
    clustering_method = "ward.D2"
  )
```

## Validation analysis

```{r}
upreg_proteins_igt <- de_all_igt |> 
  select(Feature, Disease, logFC, adj.P.Val) |> 
  filter(logFC > 0, adj.P.Val < 0.05) |>
  arrange(desc(logFC)) |> 
  group_by(Disease) |>
  top_n(10, logFC) |>
  ungroup()
```

```{r}
plots <- list()

for (i in seq_along(disease_vec)) {
  disease <- disease_vec[i]
  
  p <- upreg_proteins_igt |> 
    filter(Disease == disease) |> 
    ggplot(aes(x = logFC, y = fct_reorder(Feature, logFC), color = Disease)) +
    geom_segment(aes(x = 0, xend = logFC, y = Feature, yend = Feature)) +
    geom_point(size = 4) +
    #geom_vline(xintercept = 0, linetype = "dashed", color = "black") +
    scale_color_manual(values = disease_palette) +
    theme_hd() +
    theme(legend.position = "none", plot.margin = margin(2, 0, 2, 0)) +
    xlim(0, 1.5) +
    labs(y = element_blank(), title = disease)
  
  # Remove x-axis and x-axis label for all but the last plot
  if (i < length(disease_vec)) {
    p <- p + theme(axis.line.x = element_blank(), 
                   axis.title.x = element_blank(), 
                   axis.text.x = element_blank(), 
                   axis.ticks.x = element_blank())
  } else {
    p <- p + labs(x = "logFC")
  }
  
  plots[[i]] <- p
}

combined_plot_igt <- wrap_plots(plots, ncol = 1) + 
  plot_annotation(title = 'IGTM Cohort') &
  theme(plot.title = element_text(hjust = 0.5, face = "bold"))
combined_plot_igt
```

```{r}
plots <- list()

for (i in seq_along(disease_vec)) {
  disease <- disease_vec[i]
  
  p <- upreg_proteins_igt |> 
    left_join(de_all_scapis |> select(Feature, Disease, logFC, adj.P.Val), 
              by = c("Feature", "Disease")) |>
    filter(Disease == disease) |> 
    ggplot(aes(x = logFC.y, y = fct_reorder(Feature, logFC.x), color = Disease)) +
    geom_segment(aes(x = 0, xend = logFC.y, y = Feature, yend = Feature)) +
    geom_point(size = 4) +
    #geom_vline(xintercept = 0, linetype = "dashed", color = "black") +
    scale_color_manual(values = disease_palette) +
    theme_hd() +
    theme(legend.position = "none", plot.margin = margin(2, 0, 2, 0)) +
    xlim(0, 1.5) +
    labs(y = element_blank(), title = disease) +
    theme(axis.title.y = element_blank(), 
          axis.text.y = element_blank(), 
          axis.ticks.y = element_blank())
  
  # Remove x-axis and x-axis label for all but the last plot
  if (i < length(disease_vec)) {
    p <- p + theme(axis.line.x = element_blank(), 
                   axis.title.x = element_blank(), 
                   axis.text.x = element_blank(), 
                   axis.ticks.x = element_blank())
  } else {
    p <- p + labs(x = "logFC")
  }
  
  plots[[i]] <- p
}

combined_plot_scapis <- wrap_plots(plots, ncol = 1) + 
  plot_annotation(title = 'SCAPIS Cohort') &
  theme(plot.title = element_text(hjust = 0.5, face = "bold"))
combined_plot_scapis
```

```{r}
plots <- list()

for (i in seq_along(disease_vec)) {
  disease <- disease_vec[i]
  
  p <- upreg_proteins_igt |> 
    left_join(lasso_features |> 
                mutate(Scaled_Importance = case_when(
                  Sign == "POS" ~ Scaled_Importance,
                  Sign == "NEG" ~ -Scaled_Importance,
                  TRUE ~ 0
                )) |> 
                select(Feature, Disease, Scaled_Importance), 
              by = c("Feature", "Disease")) |>
    filter(Disease == disease) |> 
    ggplot(aes(x = Scaled_Importance, y = fct_reorder(Feature, logFC), fill = Disease)) +
    geom_col() +
    geom_vline(xintercept = 0, linetype = "dashed", color = "black") +
    scale_fill_manual(values = disease_palette) +
    labs(title = disease) +
    theme_hd() +
    theme(legend.position = "none", plot.margin = margin(2, 0, 2, 0)) +
    xlim(-1, 1) +
    theme(axis.line.y = element_blank(),
          axis.title.y = element_blank(), 
          axis.text.y = element_blank(), 
          axis.ticks.y = element_blank())
    
  
  # Remove x-axis and x-axis label for all but the last plot
  if (i < length(disease_vec)) {
    p <- p + theme(axis.line.x = element_blank(), 
                   axis.title.x = element_blank(), 
                   axis.text.x = element_blank(), 
                   axis.ticks.x = element_blank())
  } else {
    p <- p + labs(x = "Protein Importance (%)")
  }
  
  plots[[i]] <- p
}

combined_plot_ml <- wrap_plots(plots, ncol = 1) + 
  plot_annotation(title = 'LASSO model') &
  theme(plot.title = element_text(hjust = 0.5, face = "bold"))
combined_plot_ml
```

```{r}
plots <- list()

for (i in seq_along(disease_vec)) {
  disease <- disease_vec[i]
  print(disease)
  p <- upreg_proteins_igt |> 
    left_join(de_all_scapis |> select(Feature, Disease, logFC, adj.P.Val), 
              by = c("Feature", "Disease")) |>
    left_join(lasso_features |> filter(Disease == disease), 
              by = c("Feature", "Disease")) |> 
    filter(Disease == disease) |> 
    mutate(Scaled_Importance = ifelse(is.na(Scaled_Importance), 0, Scaled_Importance)) |>
    mutate(Validate = ifelse(logFC.y > 0 & logFC.x > 0 & Scaled_Importance > 0, 1, 0)) |>
    mutate(Validate = as.factor(Validate)) |> 
    ggplot(aes(x = "0", y = fct_reorder(Feature, logFC.x), fill = Validate)) +
    geom_point(shape=22, size = 4) +
    scale_fill_manual(values = c("1" = "green", "0" = "red")) +
    scale_x_discrete(breaks=c("0"), labels=c("YES/NO")) + 
    theme_hd() +
    theme(legend.position = "none", plot.margin = margin(2, 0, 2, 0),
          axis.text.x = element_text(angle = 0, hjust = 0.5, vjust = 1)) +
    labs(y = element_blank(), title = disease) +
    theme(axis.line.y = element_blank(), 
          axis.title.y = element_blank(), 
          axis.text.y = element_blank(), 
          axis.ticks.y = element_blank())
  
  # Remove x-axis and x-axis label for all but the last plot
  if (i < length(disease_vec)) {
    p <- p + theme(axis.line.x = element_blank(),
                   axis.title.x = element_blank(),
                   axis.text.x = element_blank(),
                   axis.ticks.x = element_blank())
  } else {
    p <- p + labs(x = "")
  }
  
  plots[[i]] <- p
}

combined_plot_validate <- wrap_plots(plots, ncol = 1) + 
  plot_annotation(title = 'Validation') &
  theme(plot.title = element_text(hjust = 0.5, face = "bold"))
combined_plot_validate
```

```{r}
# rm(combined_plot_ml)
# rm(combined_plot_igt)
# rm(combined_plot_scapis)
# rm(combined_plot_validate)
# rm(final_plot)
```

```{r, warnings = FALSE}
combined_plot_ml <- wrap_elements(full = combined_plot_ml) +
  plot_annotation(title = "LASSO model trained on IGTM") &
  theme(plot.title = element_text(hjust = 0.5, face = "bold"))

combined_plot_igt <- wrap_elements(full = combined_plot_igt) +
  plot_annotation(title = "IGTM Cohort") &
  theme(plot.title = element_text(hjust = 0.5, face = "bold"))

combined_plot_scapis <- wrap_elements(full = combined_plot_scapis) +
  plot_annotation(title = "SCAPIS Cohort") &
  theme(plot.title = element_text(hjust = 0.5, face = "bold"))

combined_plot_validate <- wrap_elements(full = combined_plot_validate) +
  plot_annotation(title = "Validation") &
  theme(plot.title = element_text(hjust = 0.5, face = "bold"))

# Combine the wrapped plots side-by-side
final_plot <- (combined_plot_igt | combined_plot_scapis | combined_plot_ml | combined_plot_validate) +
  plot_layout(widths = c(3.5, 3, 3, 1))
final_plot
```

## Top protein features boxplots

```{r}
disease_palette_boxplot <- c("Obesity" = "#E7662B", 
                             "T2D" = "#321433",
                             "MS" = "#08585A", 
                             "MASLD" = "#FFD321", 
                             "Carotid_plaque" = "#E8A29A", 
                             "CAC" = "#9E0142",
                             "Other Disease" = "grey70",
                             "Healthy" = "grey90")

top_proteins <- lasso_features |> 
  mutate(Disease_protein = paste(Disease, Feature, sep = "_")) |> 
  filter(Disease_protein != "MS_ACY1") |> 
  select(-Disease_protein) |> 
  group_by(Disease) |>
  arrange(Disease, desc(Scaled_Importance)) |>
  slice_head(n = 3) |> 
  ungroup() |> 
  rename(Protein = Feature)

top_proteins_vec <- top_proteins |> 
  pull(Protein)

plot_data <- data_igt |> 
  left_join(metadata_igt |> select(DAid, all_of(disease_vec)), by = "DAid") |>
  select(DAid, all_of(disease_vec), all_of(top_proteins_vec)) |> 
  mutate(across(all_of(c("Obesity", "MS", "MASLD", "CAC", "Carotid_plaque", "T2D")), ~ ifelse(. == "0", 0, 1))) |>
  pivot_longer(cols = -c(DAid, disease_vec), names_to = "Protein", values_to = "Value") |> 
  left_join(top_proteins |> select(Protein, Disease) |> unique(), 
            by = "Protein", 
            relationship = "many-to-many") |> 
  mutate(Disease_Value = case_when(
    Disease == "Obesity" ~ Obesity,
    Disease == "CAC" ~ CAC,
    Disease == "T2D" ~ T2D,
    Disease == "MS" ~ MS,
    Disease == "MASLD" ~ MASLD,
    Disease == "Carotid_plaque" ~ Carotid_plaque,
    TRUE ~ NA_real_
  )) |> 
  mutate(Any_disease = Obesity + CAC + T2D + MS + MASLD + Carotid_plaque) |> 
  mutate(Disease_Value = case_when(
    Disease_Value == 1 ~ Disease,
    Any_disease == 0 ~ "Healthy",
    Disease_Value == 0 ~ "Other Disease",
    TRUE ~ "Control"  # Default case for NA values
  )) |> 
  mutate(Disease_protein = paste(Disease, Protein, sep = "_"))

plot_data |> 
  ggplot(aes(x = factor(Disease_Value, 
                        levels = c("Healthy", 
                                   "Other Disease", 
                                   unique(Disease[!is.na(Disease_Value)]))), 
             y = Value, 
             fill = Disease_Value)) +
  geom_boxplot(position = position_dodge(0.8), outlier.size = 1.5) +
  scale_fill_manual(values = disease_palette_boxplot) +
  facet_wrap(~Disease_protein, scales = "free", nrow = 3) +
  labs(x = element_blank(), y = "NPX") +
  theme_hd() + 
  theme(legend.position = "none",
        axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1))
```

## Top-feature correlation with clinical metadata

```{r}
metadata_cols <- c("Sex", "Age", "BMI", "Smoke_status", "MAP_Mean", "HbA1c", "HOMA_IR", "Glucose", "Chol", "LDL", "HDL", "TG", "ALT", "GGT", "Urate", "Crea", "eGFR", "CRP", "Hb", "WBC", "PLT")

top_proteins <- lasso_features |> 
  arrange(Disease, desc(Scaled_Importance)) |>
  filter(Scaled_Importance > 0) |>
  rename(Protein = Feature) |> 
  select(Protein) |> 
  unique() |> 
  pull(Protein)

protein_data <- data_igt |> select(all_of(top_proteins))

clinical_data <- metadata |> 
  filter(DAid %in% data_igt$DAid) |>
  arrange(match(DAid, data_igt$DAid)) |> 
  select(all_of(c(metadata_cols, disease_vec))) |> 
  mutate(Smoke_status = case_when(
    Smoke_status == "NEVER" ~ 0,
    Smoke_status == "EX_SMOKER" ~ 1,
    Smoke_status == "CURRENT" ~ 2,
    TRUE ~ NA_real_
  )) |>
  mutate(Sex = case_when(
    Sex == "F" ~ 0,
    Sex == "M" ~ 1,
    TRUE ~ NA_real_
  )) |> 
  mutate(across(all_of(disease_vec), ~ ifelse(. == "0", 0, 1)))
  

correlation_matrix <- cor(protein_data, clinical_data, use = "pairwise.complete.obs", method = "spearman")

row_dendrogram <- hclust(dist(correlation_matrix), method = "ward.D2")
row_order <- row_dendrogram$order

col_dendrogram <- hclust(dist(t(correlation_matrix)), method = "ward.D2")
col_order <- col_dendrogram$order

correlation_matrix <- correlation_matrix[row_order, col_order]

corrplot(correlation_matrix, 
         method = "square",
         is.corr = FALSE,
         tl.srt = 90,
         tl.col = "black",
         col = rev(COL2('RdBu', 200)),
         col.lim = c(-1, 1)) 
```
