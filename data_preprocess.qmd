---
title: "main"
format: html
editor: source
---

# Set-up

```{r setup, message = FALSE, warning = FALSE, results = 'hide'}
library(HDAnalyzeR)
library(tidyverse)
library(ggridges)
library(tidyheatmaps)
library(corrplot)
```

# Import data & metadata

```{r, message = FALSE, results = 'hide'}
long_data <- hd_import_data("data/raw_data/IGT_SCAPIS_preprocessed_data.tsv")

metadata <- hd_import_data("data/raw_data/IGTM_SCAPIS_metadata_230406.txt")
metadata_scapis <- hd_import_data("data/raw_data/scapis_metadata_manifest.xlsx")
metadata_igt <- hd_import_data("data/raw_data/igts_metadata_manifest.xlsx")
cac_100 <- hd_import_data("data/raw_data/cac_100.csv")
```

# Data preprocessing

## Prepare data

Get the unique DAid from the metadata files (SCAPIS and IGT).

```{r}
scapis_DAid <- metadata_scapis$DAid |> unique()
igt_DAid <- metadata_igt$DAid |> unique()
```

Separate data and make them wide.

```{r}
data_scapis <- long_data |> filter(DAid %in% scapis_DAid) |> arrange(DAid, Assay)
data_igt <- long_data |> filter(DAid %in% igt_DAid) |> arrange(DAid, Assay)

data_scapis <- hd_initialize(data_scapis)[["data"]]
data_igt <- hd_initialize(data_igt)[["data"]]
```

See if the DAids of the data match the DAids of the metadata (both Goran's and manifest).

Check which DAids are different (if any) between the manifest metadata and the data.

```{r}
manifest_metadata <- rbind(metadata_scapis, metadata_igt)
missing_in_metadata <- setdiff(long_data$DAid, manifest_metadata$DAid)
print(missing_in_metadata)

missing_in_data <- setdiff(manifest_metadata$DAid, long_data$DAid)
print(missing_in_data)
```

Check which DAids are different (if any) between the Goran's metadata and the data.

```{r}
missing_in_metadata <- setdiff(long_data$DAid, metadata$DAid)
print(missing_in_metadata)

missing_in_data <- setdiff(metadata$DAid, long_data$DAid)
print(missing_in_data)
```

## Prepare metadata

Check different values in specified metadata columns. For the missing values we are going to check if they are coexisting in the same patients. For carotid plaque we are going to make it binary (YES/NO). For the glucose group we are going to make a binary variable called impaired glucose tolerance (NO - patients with T2D, IGT, CGI, IFG, YES - all others).

```{r}
metadata |> 
  left_join(cac_100, by = "DAid") |>
  mutate(CAC_100 = as.character(CAC_100)) |> 
  select(all_of(c("glucose.group", "carotidplaque", "CAC_100", "NAFLD", "MetS_NCEP", "cqhe058"))) |> 
  pivot_longer(everything(), names_to = "Variable", values_to = "Value") |> 
  group_by(Variable, Value) |> 
  summarise(Count = n(), .groups = 'drop') |> 
  arrange(Variable) |> 
  group_by(Variable) |> 
  summarise(Summary = paste(Value, "(", Count, ")", collapse = ", ")) |> 
  ungroup() |> 
  mutate(Summary = paste(Variable, ":", Summary)) |> 
  pull(Summary) |> 
  cat(sep = "\n")
```

> In `glucose.group` - CGI: Combined Glucose Impairment (both impaired fasting glucose (IFG) and impaired glucose tolerance (IGT)). NGT: Normal Glucose Tolerance, highFINDRISC (lowFINDRISC): high (low) score on the FINDRISC (Finnish Diabetes Risk Score), T2D_new: Newly Diagnosed Type 2 Diabetes.

Check for NA overlap.

```{r}
metadata |> 
  left_join(cac_100, by = "DAid") |>
  mutate(CAC_100 = as.character(CAC_100)) |> 
  rowwise() |> 
  mutate(carotidplaque = if_else(carotidplaque == "NOT_APPLICABLE", NA, carotidplaque)) |> 
  mutate(NA_count = sum(is.na(across(all_of(c("CAC_100", "carotidplaque", "NAFLD", "MetS_NCEP", "glucose.group", "cqhe058")))))) |> 
  ungroup() |> 
  filter(NA_count > 0) |> 
  select(DAid, NA_count) |> 
  arrange(desc(NA_count))
```

Rename and modify the metadata columns.

-   Convert Sex from MALE/FEMALE to M/F

-   Convert carotidplaque to binary (NO/YES)

-   Create Obesity (BMI \> 30), T2D (glucose.group == "T2D_new") and IGT (glucose.group %in% c("CGI", "IFG", "IGT", "T2D_new")) columns

-   Create MAP (Mean Arterial Pressure) from Systolic (SBP_mean) and Diastolic (DBP_mean) blood pressure

-   Rename multiple columns to make them easier to understand

-   0-1 encoding for the disease columns

```{r}
metadata_preprocessed <- metadata |> 
  left_join(cac_100, by = "DAid") |>
  mutate(CAC_100 = as.character(CAC_100)) |> 
  select(-CAC) |> 
  rename(Age = AgeAtVisitOne, 
         Sex = Gender,
         Carotid_plaque = carotidplaque,
         MS = MetS_NCEP, 
         MASLD = NAFLD,
         Myocardial_infarction = cqhe002, 
         Atrial_fibrillation = cqhe009,
         Coronary_artery_intervention = cqhe017,
         Stroke = cqhe029,
         COPD = cqhe043,
         Asthma = cqhe048,
         Tuberculosis = cqhe055,
         Sleep_apnea = cqhe058,
         Celiac_disease = cqhe063,
         Crohn = cqhe066,
         Rheumatic_disease = cqhe069,
         CAC = CAC_100) |> 
  mutate(Age = Age |> as.numeric() |> floor()) |> 
  mutate(Sex = if_else(Sex == "MALE", "M", "F")) |> 
  mutate(Carotid_plaque = if_else(Carotid_plaque == "NOT_APPLICABLE", NA, Carotid_plaque)) |> 
  mutate(across(everything(), ~ ifelse(. == "", NA, .))) |> 
  mutate(MAP_Mean = round(1/3 * SBP_Mean + 2/3 * DBP_Mean, 0),
         Obesity = if_else(BMI > 30, "Obesity", "0"),
         #IGT = if_else(glucose.group %in% c("CGI", "IFG", "IGT", "T2D_new"), 1, 0),
         T2D = if_else(glucose.group == "T2D_new", "T2D", "0"),
         Carotid_plaque = if_else(Carotid_plaque %in% c("NO_PLAQUE"), "0", "Carotid_plaque"),
         MS = if_else(MS == "YES", "MS", "0"),
         MASLD = if_else(MASLD == "YES", "MASLD", "0"),
         CAC = if_else(CAC == "1", "CAC", "0"),
         Myocardial_infarction = if_else(Myocardial_infarction == "YES", "Myocardial_infarction", "0"),
         Atrial_fibrillation = if_else(Atrial_fibrillation == "YES", "Atrial_fibrillation", "0"),
         Coronary_artery_intervention = if_else(Coronary_artery_intervention == "YES", "Coronary_artery_intervention", "0"),
         Stroke = if_else(Stroke == "YES", "Stroke", "0"),
         COPD = if_else(COPD == "YES", "COPD", "0"),
         Asthma = if_else(Asthma == "YES", "Asthma", "0"),
         Tuberculosis = if_else(Tuberculosis == "YES", "Tuberculosis", "0"),
         Sleep_apnea = if_else(Sleep_apnea == "YES", "Sleep_apnea", "0"),
         Celiac_disease = if_else(Celiac_disease == "YES", "Celiac_disease", "0"),
         Crohn = if_else(Crohn == "YES", "Crohn", "0"),
         Rheumatic_disease = if_else(Rheumatic_disease == "YES", "Rheumatic_disease", "0"))
```

check if the metadata are similar with the manifest metadata for SCAPIS and IGT. Check for identity in Sex and Age columns.

For both datasets the differences are that different DAids are present in the metadata and manifest metadata. The difference size is small however.

```{r}
# SCAPIS
daids_not_in_metadata <- scapis_DAid |> 
  setdiff(metadata_preprocessed$DAid)
print(paste("DAids not present in Goran metadata (", 
            length(daids_not_in_metadata), 
            "):", 
            toString(daids_not_in_metadata)))

check_metadata <- metadata_preprocessed |> 
  filter(DAid %in% scapis_DAid) |>
  select(DAid, Sex, Age) |> 
  left_join(metadata_scapis |> select(DAid, Sex, Age), by = "DAid") |> 
  filter(
    (Sex.x != Sex.y) | (is.na(Sex.x) != is.na(Sex.y)) |
    (Age.x != Age.y) | (is.na(Age.x) != is.na(Age.y))
  )

problem_samples <- check_metadata$DAid
print(paste("DAids with different Sex and Age between Goran and manifest metadata (",
            length(problem_samples), 
            "):", 
            toString(problem_samples)))
```

```{r}
# IGT
daids_not_in_metadata <- igt_DAid |> 
  setdiff(metadata_preprocessed$DAid)
print(paste("DAids not present in Goran metadata (", 
            length(daids_not_in_metadata), 
            "):",
            toString(daids_not_in_metadata)))

check_metadata <- metadata_preprocessed |> 
  filter(DAid %in% igt_DAid) |>
  select(DAid, Sex, Age) |> 
  left_join(metadata_igt |> select(DAid, Sex, Age), by = "DAid") |> 
  filter(
    (Sex.x != Sex.y) | (is.na(Sex.x) != is.na(Sex.y)) |
    (Age.x != Age.y) | (is.na(Age.x) != is.na(Age.y))
  )

problem_samples <- check_metadata$DAid
print(paste("DAids with different Sex and Age between Goran and manifest metadata (",
            length(problem_samples), 
            "):", 
            toString(problem_samples)))
```

## Data QC

All missing values are in 5 (SCAPIS) and 9 (IGT) samples, but still the maximum NA percentage is less than 25%. There are the typical clusters of correlated proteins in Olink data.

```{r}
# qc_summary_data(data_scapis, threshold = 0.9)
# qc_summary_data(data_igt, threshold = 0.9)
```

## Join data and metadata

```{r}
metadata_cols <- c("DAid", "Sex", "Age", "BMI", "Smoke_status", "MAP_Mean", "HbA1c", "Chol", "LDL", "HDL", "TG", "ALT", "GGT", "Urate", "Crea", "eGFR", "CRP", "Hb", "WBC", "PLT", "Obesity", "T2D", "MS", "MASLD", "Carotid_plaque", "CAC")

data_scapis_joined <- left_join(data_scapis, 
                                metadata_preprocessed |> select(all_of(metadata_cols)), 
                                by = "DAid") |> 
  select(DAid, all_of(metadata_cols), everything())

data_igt_joined <- left_join(data_igt, 
                             metadata_preprocessed |> select(all_of(metadata_cols)), 
                             by = "DAid") |>
  select(DAid, all_of(metadata_cols), everything())
```

# Exploratory data analysis

Very similar distributions between the 2 datasets regarding both Sex and Age.

```{r}
metadata_preprocessed |> 
  mutate(Cohort = if_else(DAid %in% scapis_DAid, "SCAPIS", "IGTM")) |> 
  count(Sex, Cohort) |> 
  ggplot(aes(x = n, y = Cohort, fill = Sex)) +
  geom_bar(stat = "identity", position = "stack") +
  labs(x = "Number of samples", y = "") +
  scale_fill_hd("sex") + 
  theme_hd()

metadata_preprocessed |> 
  mutate(Cohort = if_else(DAid %in% scapis_DAid, "SCAPIS", "IGTM")) |> 
  select(Age, Cohort) |> 
  ggplot2::ggplot(ggplot2::aes(x = Age, y = Cohort, fill = Cohort)) +
  geom_density_ridges2(quantile_lines = TRUE, alpha = 0.7, quantiles = 2, scale = 1) +
  labs(x = "Age", y = "") +
  theme_hd() +
  theme(legend.position = "none")
```

Number of diseases in the 2 datasets.

```{r}
disease_cols <- c("Obesity", "MS", "MASLD", "CAC", "Carotid_plaque", "Atrial_fibrillation", "Stroke", "COPD", "Asthma", "Tuberculosis", "Sleep_apnea", "Celiac_disease", "Crohn", "Rheumatic_disease", "T2D")  # "Myocardial_infarction", "Coronary_artery_intervention", 

disease_palette <- c("Obesity" = "#E7662B", 
                     "T2D" = "#321433",
                     "MS" = "#08585A", 
                     "MASLD" = "#FFD321", 
                     "Carotid_plaque" = "#E8A29A", 
                     "CAC" = "#9E0142")

metadata_preprocessed |> 
  mutate(Cohort = if_else(DAid %in% scapis_DAid, "SCAPIS", "IGTM")) |> 
  select(DAid, Cohort, all_of(disease_cols)) |> 
  pivot_longer(cols = -c("DAid", "Cohort"), names_to = "Disease", values_to = "Status") |>
  filter(Status != 0) |> 
  count(Disease, Cohort) |> 
  ggplot(aes(x = n, y = Disease, fill = Disease)) +
  geom_col() +
  geom_text(aes(label = n), vjust = 0.1, hjust = -0.5, color = "black", size = 3) +
  labs(x = "Number of samples", y = "") +
  facet_wrap(~Cohort, scales = "free_y", nrow = 2) +
  scale_fill_manual(values = disease_palette, na.value = "lightgrey") +
  theme_hd() +
  theme(legend.position = "none")
```

Check the correlation between the different disease classes. We see a big block. Myocardial infarction and coronary artery intervention are highly correlated and into the block but they only have few samples each (around 20 in each cohort).

```{r}
cor_matrix <- metadata_preprocessed |> 
  select(all_of(disease_cols)) |> 
  mutate(across(everything(), ~ ifelse(. == "0", 0, 1))) |>
  cor(use = "pairwise.complete.obs", method = "spearman") |> 
  round(2)

corrplot(cor_matrix, 
         method = "square",  
         tl.srt = 45,
         tl.col = "black",
         order = "hclust",
         col = rev(COL2('RdBu', 200)),
         hclust.method = "ward.D2") 
```

```{r}
metadata_preprocessed |> 
  mutate(Cohort = if_else(DAid %in% scapis_DAid, "SCAPIS", "IGTM")) |> 
  #filter(Cohort == "IGTM") |>
  select(DAid, Cohort, Sex, Age, BMI, all_of(disease_cols)) |> 
  pivot_longer(cols = -c("DAid", "Cohort", "Sex", "Age", "BMI"), 
               names_to = "Disease", 
               values_to = "Status") |> 
  mutate(Status = if_else(is.na(Status), "0", Status)) |>
  mutate(Status = ifelse(Status == "0", 0, 1)) |>
  tidyheatmap(
    rows = Disease,
    columns = DAid,
    values = Status,
    colors = c("lightgrey", "red"),
    annotation_col = c(Age, Sex, BMI),
    annotation_colors = list(Age = c("#ffEbbb", "#FA4E07"), 
                             Sex = hd_palettes()[["sex"]]),
    cluster_rows = TRUE,
    cluster_cols = TRUE,
    legend_breaks = c(0, 1),
    legend_labels = c("NO", "YES"),
    show_colnames = FALSE,
    clustering_method = "ward.D2")
```

Correlate other metadata with the diseases. From this plot however sleep apnea and asthma look irrelevant...

```{r}
all_metadata_cols <- c("Obesity", "MS", "MASLD", "CAC", "Carotid_plaque", "T2D", "Weight", "BMI", "Waist", "SBP_Mean", "DBP_Mean", "MAP_Mean", "Glucose", "HbA1c", "HOMA_IR", "Chol", "LDL", "HDL", "TG", "ALT", "GGT", "Urate", "Crea", "eGFR", "CRP", "Hb", "WBC", "PLT", "Sex", "Age")

cor_matrix <- metadata_preprocessed |> 
  select(all_of(all_metadata_cols)) |> 
  mutate(across(all_of(c("Obesity", "MS", "MASLD", "CAC", "Carotid_plaque", "T2D")), ~ ifelse(. == "0", 0, 1))) |>
  mutate(Sex = if_else(Sex == "F", 1, 0)) |> 
  cor(use = "pairwise.complete.obs", method = "spearman") |> 
  round(2)

corrplot(cor_matrix, 
         method = "square",  
         tl.srt = 45,
         tl.col = "black",
         order = "hclust",
         col = rev(COL2('RdBu', 200)),
         hclust.method = "ward.D2")
```

## UMAP

There are no extreme outliers at all or cohort effects. There is a small cluster of points bellow.

```{r}
hd_all <- hd_initialize(rbind(data_scapis, data_igt), 
                        metadata |>
                          mutate(Cohort = if_else(DAid %in% scapis_DAid, "SCAPIS", "IGT")), 
                        is_wide = TRUE)

hd_auto_umap(hd_all, plot_color = "Cohort")[["umap_plot"]]
```

# Processed the joined datasets

Check for NAs in metadata columns of joined datasets.

```{r}
na_count_scapis <- colSums(is.na(data_scapis_joined |> select(all_of(metadata_cols))))
print("SCAPIS")
na_count_scapis[na_count_scapis > 0]

print("IGT")
na_count_igt <- colSums(is.na(data_igt_joined |> select(all_of(metadata_cols))))
na_count_igt[na_count_igt > 0]
```

Remove rows containing NA values in diseases of interest, Sex and Age. We lost 87 patients from SCAPIS cohort and 39 from IGT.

```{r}
print(paste("Before NA removal we had:", nrow(data_scapis_joined), "patients in SCAPIS"))
data_scapis_final <- data_scapis_joined |> 
  filter(!is.na(Obesity), 
         !is.na(MS), 
         !is.na(MASLD), 
         !is.na(CAC),
         !is.na(Carotid_plaque),
         !is.na(T2D),
         !is.na(Sex), 
         !is.na(Age),
         !is.na(BMI))

print(paste("After NA removal we have:", nrow(data_scapis_final), "patients in SCAPIS"))  # We lost 77 patients
```

```{r}
print(paste("Before NA removal we had:", nrow(data_igt_joined), "patients in IGT"))
data_igt_final <- data_igt_joined |> 
  filter(!is.na(Obesity), 
         !is.na(MS), 
         !is.na(MASLD), 
         !is.na(CAC),
         !is.na(Carotid_plaque),
         !is.na(T2D),
         !is.na(Sex), 
         !is.na(Age),
         !is.na(BMI))

print(paste("After NA removal we have:", nrow(data_igt_final), "patients in IGT"))  # We lost 39 patients
```

## Impute missing values

Impute the rest of metadata missing values together with Olink values using KNN imputation (k = 5).

```{r}
data_scapis_imputed <- hd_impute_knn(data_scapis_final, verbose = FALSE)
data_igt_imputed <- hd_impute_knn(data_igt_final, verbose = FALSE)
```

# Save data

```{r}
data_scapis <- data_scapis_imputed |> select(-all_of(metadata_cols[-1]))
metadata_scapis <- data_scapis_imputed |> select(all_of(metadata_cols))
data_igt <- data_igt_imputed |> select(-all_of(metadata_cols[-1]))
metadata_igt <- data_igt_imputed |> select(all_of(metadata_cols))

col_names <- colnames(data_scapis[-1]) |> sort() 
data_scapis <- data_scapis |> select(DAid, all_of(col_names))
data_igt <- data_igt |> select(DAid, all_of(col_names))
```

```{r}
hd_save_data(data_scapis_imputed, "data/processed_data/scapis_joined_preprocessed.csv")
hd_save_data(data_igt_imputed, "data/processed_data/igt_joined_preprocessed.csv")
hd_save_data(metadata_preprocessed, "data/processed_data/metadata_preprocessed.csv")
hd_save_data(data_scapis, "data/processed_data/scapis_preprocessed.csv")
hd_save_data(data_igt, "data/processed_data/igt_preprocessed.csv")
hd_save_data(metadata_scapis, "data/processed_data/metadata_scapis.csv")
hd_save_data(metadata_igt, "data/processed_data/metadata_igt.csv")
```